

//refactor this function

function filterOutOdds() {
    var nums = Array.prototype.slice.call(arguments);
  return nums.filter(function(num) {
    return num % 2 === 0
  });
}

function filterOutOdds(...nums) {
    return nums.filter((num)=> {
        return num % 2 === 0
    }) ;
}

//Find Min:

function findMin(...nums){ return Math.min(...nums)}

//MergeObjects

//Write a function called mergeObjects that accepts two objects and returns a new object which contains all the keys and values of the first and second object. 

function mergeObjects(obj1, obj2){
    return {...obj1, ...obj2}
};

//doubleAndReturnArgs
//Write a function called doubleAndReturnArgs which accepts an array and a variable number of arguments. The function should return a new array with the original array values and all of additional arguments doubled.

const doubleAndReturnArgs = (arr, ...args) => [...arr, ...args.map(val => val*2)];


